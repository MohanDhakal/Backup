Event Handling:

Event Delegation Model: It is a modern approach to handle events in Java.
-->According to it, a source generates an event and sends it to one or more listeners.
-->The listener simply waits until it receives an event. 
-->Once it is received, the listener processes the event and then returns.
-->The listeners must register with a source in order to receive an event notification.

Event:
-->An event is an object that describes a state change in a source. Eg. pressing a button, entering a character via keyboard, clicking a mouse.

Event Source:
-->A source is an object that generates an event. A source may generate more than one type of event.

Event Listeners:
--> A listener is an object that is notified when an event occurs.

Event classes:
--> At the root of java event class is EventObject. It contains two methods getSource() and toString().
Some of its subclasses:
ActionEvent: 
-->when a button is pressed, list item is double clicked or a menu is selected
FocusEvent:
-->generated when a component gains or loses focus
ItemEvent:
-->generated when a checkbox or a list item is clicked
MouseEvent:
-->generated when a mouses is dragged, clicked, pressed, released
MouseWheelMoved:
-->generated when mouse wheel is moved
TextEvent:
-->when value of textarea or a textfield is changed


