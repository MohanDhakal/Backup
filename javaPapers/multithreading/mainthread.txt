Main Thread:
--------------
-->When a Java program starts up, one thread begins running immediately. This is called the main thread.
The main thread is important for two reasons:
• It is the thread from which other "child" threads will be spawned. 
• Most often it is the last thread to finish execution.

-->Although the main thread is created automatically when program is started, it can be controlled through a Thread object. 
-->To do so, you must obtain a reference to it by calling the method currentThread( ), which is a public static member of Thread. Its general form is:
    static Thread currentThread( )
-->This method returns a reference to the thread in which it is called. Once you have a reference to the main thread, you can control it just like any other thread.













// Controlling the main Thread. 
class CurrentThreadDemo { 
public static void main(String args[]) { 
Thread t = Thread.currentThread(); 
System.out.println("Current thread: " + t); 
// change the name of the thread 
t.setName("My Thread"); 
System.out.println("After name change: " + t); 
try { 
for(int n = 5; n > 0; n—) { 
System.out.println(n); 
Thread.sleep(1000); 
} 
} catch (InterruptedException e) { 
System.out.println("Main thread interrupted"); 
} 
} 
}

Output:
-------
Current thread: Thread[main,5,main] 
After name change: Thread[My Thread,5,main] 

5 
4 
3 
2 
1