Layout Managers:
--> A layout manager is an instance of any LayoutManager interface that specifies how the components are arranged in a Container.

-->the layout managers in java are FlowLayout, BorderLayout, GridLayout, GridBagLayout, CardLayout

-->setLayout() method is used to specify the layout manager for a container.
--> if we do not want to use any of the layout managers we can pass null to setLayout() method.

FlowLayout: A layout manager which arranges the components left to right and top to bottom in a container. a gap of 5 pixels is given between the components horizontally and vertically both.


BorderLayout: A layout manager which arranges the components in five regions (North, south, east, west,center) in a container.
the width of north and south components is the width of container.

GridLayout: Divides the container into a matrix of rows and columns. 
The height and width of all rows and columns is same.
GridLayout(int rows, int cols)
GridLayout(int rows, int cols, int hor,int ver)


GridBagLayout:
--> is the most powerful layout manager. 
-->divides the container into an array of cells but different cell rows can have different heights and different cell columns can have different widths.
-->A helper class GridBagConstraints is used to hold all the layout position information.

CardLayout:
--> unique among other layout managers.
-->this layout manager lays out components in time rather than in space.
-->at any moment, a container using a CardLayout manager is displaying one or another of its components, all other components are unseen.
-->It provides five methods to select the components that is to be displayed.
	void first(Container)
	void last(Container)
	void next(Container)
	void previous(Container)
	void show(Container,String)-->selects a particular component based on textual name that was given to the component when the component was added to the container.


