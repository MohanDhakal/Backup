Reflection:
---------
Reflection is a Java API to deal with Java class at runtime. It can be used to load the Java class, call its methods or analyze the class at runtime.
-->Reflection is a java language ability to inspect and dynamically call classes, methods, attributes at runtime.
-->By using reflection API we can find out the name of class used, modifier  used for class, name of methods, number of arguments in methods, types of arguments and return type of method at run time.








package reflection;

import java.lang.reflect.*;
public class ReflectionDemo {
    public static void m

ain(String args[]){
	Class reflectClass=ReflectionTest.class;
	//get class name
        String className=reflectClass.getName();
	System.out.println("Class "+className);
        //get class modifier
        int classModifier=reflectClass.getModifiers();
        System.out.println(Modifier.isPublic(classModifier));
        //get methods
        Method[] classMethods=reflectClass.getMethods();
        for(Method method:classMethods)
        {
            System.out.println("Method Name: "+method.getName());
            System.out.println("Return Type: "+method.getReturnType());
            
            //get parameter
            Class[] parameterTypes=method.getParameterTypes();
            System.out.println("Parameters ");
            for(Class parameter:parameterTypes){
                System.out.println(parameter.getName());
            }
        }
  }
}

----------------------

package reflection;

public class ReflectionTest {
    private int id=100;
    public String check(String msg){
        return "Hello "+msg;
    }
   public void test(){
     System.out.println("method with no parameter");
   }
}

